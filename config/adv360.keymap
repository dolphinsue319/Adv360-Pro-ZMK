#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hml: home_row_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LAYER";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
        down_5_morph: down_5_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "DOWN_5_MORPH";
            bindings =
                <&kp N5>,
                <&kp DOWN_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI|MOD_LGUI)>;
        };
        up_8_morph: up_8_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "UP_8_MORPH";
            bindings =
                <&kp N8>,
                <&kp UP_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
        right_6_morph: right_6_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_6_MORPH";
            bindings =
                <&kp NUMBER_6>,
                <&kp RIGHT_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&gresc             &kp N1     &kp N2          &kp N3       &kp N4       &kp N5    &kp NUMBER_6                                                                                                                             &trans                   &kp NUMBER_6  &kp N7             &kp N8        &kp N9           &kp N0           &mo 3
&kp EQUAL          &kp Q      &kp W           &hml 2 E     &kp R        &kp T     &mo 2                                                                                                                                    &mo 2                    &kp Y         &kp U              &hml 2 I      &kp O            &kp P            &kp BSLH
&kp MINUS          &kp A      &hm LEFT_ALT S  &hm LCTRL D  &hm LSHFT F  &hml 1 G  &mo 1                   &mt LEFT_ALT TAB      &kp LC(LA(LS(LEFT_COMMAND)))  &none  &none  &kp RC(RA(RS(LGUI)))      &mt RIGHT_ALT GRAVE  &mo 1                    &hml 1 H      &hm RIGHT_SHIFT J  &hm RCTRL K   &hm RIGHT_ALT L  &kp SEMICOLON    &kp SQT
&mo 2              &kp Z      &kp X           &kp C        &kp V        &kp B     &none                   &none                 &kp LG(LC(LEFT_ALT))          &none  &none  &kp RG(RC(RIGHT_ALT))     &none                &none                    &kp N         &kp M              &kp COMMA     &kp DOT          &kp FSLH         &kp BACKSPACE
&kp RC(RA(SPACE))  &kp RG(Z)  &kp RG(X)       &kp RG(C)    &kp RG(V)              &mt LEFT_COMMAND ENTER  &mt LEFT_SHIFT SPACE  &mt LEFT_CONTROL BACKSPACE                  &mt RIGHT_CONTROL DELETE  &kp RIGHT_SHIFT      &mt RIGHT_COMMAND SPACE                &kp LEFT_ARROW     &kp UP_ARROW  &kp DOWN_ARROW   &kp RIGHT_ARROW  &kp CAPS
            >;
        };

        keypad {
            bindings = <
&trans  &trans             &kp RA(RC(RG(LEFT_ARROW)))  &kp RA(RC(UP_ARROW))    &kp RG(RC(RA(RIGHT_ARROW)))  &trans  &kp RA(RC(ENTER))                                                &trans  &trans         &trans      &trans                    &trans                     &trans  &trans
&trans  &kp LG(BACKSPACE)  &kp RA(RC(LEFT_ARROW))      &kp RA(RC(C))           &kp RA(RC(RIGHT_ARROW))      &trans  &trans                                                           &trans  &trans         &trans      &kp LEFT_BRACE            &kp RIGHT_BRACE            &trans  &trans
&trans  &kp RG(RA(SPACE))  &kp RA(RC(E))               &kp RA(RC(DOWN_ARROW))  &kp RA(RC(T))                &trans  &trans             &trans  &trans  &none  &none  &trans  &trans  &trans  &kp BACKSPACE  &kp DELETE  &kp LEFT_BRACKET          &kp RIGHT_BRACKET          &trans  &trans
&trans  &trans             &trans                      &trans                  &trans                       &trans  &none              &none   &trans  &none  &none  &trans  &none   &none   &trans         &trans      &kp LEFT_PARENTHESIS      &kp RIGHT_PARENTHESIS      &trans  &trans
&trans  &trans             &trans                      &trans                  &trans                               &trans             &trans  &trans                &trans  &trans  &trans                 &trans      &kp RA(RG(LEFT_BRACKET))  &kp RG(RA(RIGHT_BRACKET))  &trans  &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans           &trans        &trans         &trans  &trans                                                &trans  &trans  &trans           &trans           &trans           &trans  &trans
&trans  &trans  &kp AMPERSAND    &kp ASTERISK  &kp BACKSLASH  &trans  &none                                                 &none   &trans  &kp KP_NUMBER_7  &up_8_morph      &kp KP_N9        &trans  &trans
&trans  &trans  &kp DOLLAR       &kp PERCENT   &kp LCTRL      &trans  &none   &trans  &trans  &none  &none  &trans  &trans  &none   &trans  &kp KP_NUMBER_4  &down_5_morph    &right_6_morph   &trans  &trans
&trans  &trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &trans  &none   &none   &trans  &none  &none  &trans  &none   &none   &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans
&trans  &trans  &trans           &trans        &trans                 &trans  &trans  &trans                &trans  &trans  &trans          &kp KP_NUMBER_0  &kp DOT          &trans           &trans  &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                                 &trans                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                           &bootloader             &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &bt BT_CLR  &none  &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &none                   &none       &none       &none  &none  &none       &none       &none                   &none         &none         &none         &none         &none         &none
&none  &none         &none         &bl BL_INC    &bl BL_DEC                  &rgb_ug RGB_TOG         &bl BL_TOG  &none                     &none       &bl BL_TOG  &rgb_ug RGB_TOG                       &bl BL_INC    &bl BL_DEC    &none         &none         &none
            >;
        };
    };
};
